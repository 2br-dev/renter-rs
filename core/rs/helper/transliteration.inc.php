<?php
/**
* ReadyScript (http://readyscript.ru)
*
* @copyright Copyright (c) ReadyScript lab. (http://readyscript.ru)
* @license http://readyscript.ru/licenseAgreement/
*/

namespace RS\Helper;

class Transliteration
{
    /**
    * Функция транслитерации русских символов
    * 
    * @param string $string - строка из которой будем преобразовывать 
    * @param boolean $to_lower_case - флаг перевода в нижний регистр. По умолчанию true. 
    * @return string
    */
    public static function rus2translit($string, $to_lower_case = true)
    {

        $converter = [
            'а' => 'a', 'б' => 'b', 'в' => 'v',
            'г' => 'g', 'д' => 'd', 'е' => 'e',
            'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
            'и' => 'i', 'й' => 'y', 'к' => 'k',
            'л' => 'l', 'м' => 'm', 'н' => 'n',
            'о' => 'o', 'п' => 'p', 'р' => 'r',
            'с' => 's', 'т' => 't', 'у' => 'u',
            'ф' => 'f', 'х' => 'h', 'ц' => 'c',
            'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
            'ь' => '', 'ы' => 'y', 'ъ' => '',
            'э' => 'e', 'ю' => 'yu', 'я' => 'ya',
            'А' => 'A', 'Б' => 'B', 'В' => 'V',
            'Г' => 'G', 'Д' => 'D', 'Е' => 'E',
            'Ё' => 'E', 'Ж' => 'Zh', 'З' => 'Z',
            'И' => 'I', 'Й' => 'Y', 'К' => 'K',
            'Л' => 'L', 'М' => 'M', 'Н' => 'N',
            'О' => 'O', 'П' => 'P', 'Р' => 'R',
            'С' => 'S', 'Т' => 'T', 'У' => 'U',
            'Ф' => 'F', 'Х' => 'H', 'Ц' => 'C',
            'Ч' => 'Ch', 'Ш' => 'Sh', 'Щ' => 'Sch',
            'Ь' => '', 'Ы' => 'Y', 'Ъ' => '',
            'Э' => 'E', 'Ю' => 'Yu', 'Я' => 'Ya',
        ];
        
        if ($to_lower_case){
            $string = mb_strtolower($string);
        }

        return strtr($string, $converter);
    }

    /**
     * Функция перевода диакритических символов в обычные
     *
     * @param string $string - строка из которой будем преобразовывать
     * @param boolean $to_lower_case - флаг перевода в нижний регистр. По умолчанию true.
     * @return string
     */
    public static function diacritic2standard($string, $to_lower_case = true)
    {
        $converter = [
            'Ä' => 'A', 'ä' => 'a', 'À' => 'A',
            'à' => 'a', 'Á' => 'A', 'á' => 'a',
            'Â' => 'A', 'â' => 'a', 'Ã' => 'A',
            'ã' => 'a', 'Å' => 'A', 'å' => 'a',
            'Ǎ' => 'A', 'ǎ' => 'a', 'Ą' => 'A',
            'ą' => 'a', 'Ă' => 'A', 'ă' => 'a',
            'Æ' => 'Ae', 'æ' => 'ae', 'Ā' => 'A',
            'ā' => 'a', 'Ç' => 'C', 'ç' => 'c',
            'Ć' => 'C', 'ć' => 'c', 'Ĉ' => 'C',
            'ĉ' => 'c', 'Č' => 'C', 'č' => 'c',
            'Ď' => 'D', 'đ' => 'd', 'Đ' => 'D',
            'ď' => 'd', 'ð' => 'd', 'È' => 'E',
            'è' => 'e', 'É' => 'E', 'é' => 'e',
            'Ê' => 'E', 'ê' => 'e', 'Ë' => 'E',
            'ë' => 'e', 'Ě' => 'E', 'ě' => 'e',
            'Ę' => 'E', 'ę' => 'e', 'Ė' => 'E',
            'ė' => 'e', 'Ē' => 'E', 'ē' => 'e',
            'Ĝ' => 'G', 'ĝ' => 'g', 'Ģ' => 'G',
            'ģ' => 'g', 'Ğ' => 'G', 'ğ' => 'g',
            'Ĥ' => 'H', 'ĥ' => 'h', 'Ì' => 'I',
            'ì' => 'i', 'Í' => 'I', 'í' => 'i',
            'Î' => 'I', 'î' => 'i', 'Ï' => 'I',
            'ï' => 'i', 'ı' => 'i', 'Ī' => 'I',
            'ī' => 'i', 'Į' => 'I', 'į' => 'i',
            'Ĵ' => 'J', 'ĵ' => 'j', 'Ķ' => 'K',
            'ķ' => 'k', 'Ĺ' => 'L', 'ĺ' => 'l',
            'Ļ' => 'L', 'ļ' => 'l', 'Ł' => 'L',
            'ł' => 'l', 'Ľ' => 'L', 'ľ' => 'l',
            'Ñ' => 'N', 'ñ' => 'n', 'Ń' => 'N',
            'ń' => 'n', 'Ň' => 'N', 'ň' => 'n',
            'Ņ' => 'N', 'ņ' => 'n', 'Ö' => 'O',
            'ö' => 'o', 'Ò' => 'O', 'ò' => 'o',
            'Ó' => 'O', 'ó' => 'o', 'Ô' => 'O',
            'ô' => 'o', 'Õ' => 'O', 'õ' => 'o',
            'Ő' => 'O', 'ő' => 'o', 'Ø' => 'O',
            'ø' => 'o', 'Œ' => 'Oe', 'œ' => 'oe',
            'Ŕ' => 'R', 'ŕ' => 'r', 'Ř' => 'R',
            'ř' => 'r', 'ẞ' => 'S', 'ß' => 's',
            'Ś' => 'S', 'ś' => 's', 'Ŝ' => 'S',
            'ŝ' => 's', 'Ş' => 'S', 'ş' => 's',
            'Š' => 'S', 'š' => 's', 'Ș' => 'S',
            'ș' => 's', 'Ť' => 'T', 'ť' => 't',
            'Ţ' => 'T', 'ţ' => 't', 'Þ' => 'Th',
            'þ' => 'th', 'Ț' => 'T', 'ț' => 't',
            'Ü' => 'U', 'ü' => 'u', 'Ù' => 'U',
            'ù' => 'u', 'Ú' => 'U', 'ú' => 'u',
            'Û' => 'U', 'û' => 'u', 'Ű' => 'U',
            'ű' => 'u', 'Ũ' => 'U', 'ũ' => 'u',
            'Ų' => 'U', 'ų' => 'u', 'Ů' => 'U',
            'ů' => 'u', 'Ū' => 'U', 'ū' => 'u',
            'Ŵ' => 'W', 'ŵ' => 'w', 'Ý' => 'Y',
            'ý' => 'y', 'Ÿ' => 'Y', 'ÿ' => 'y',
            'Ŷ' => 'Y', 'ŷ' => 'y', 'Ź' => 'Z',
            'ź' => 'z', 'Ž' => 'Z', 'ž' => 'z',
            'Ż' => 'Z', 'ż' => 'z',
        ];

        if ($to_lower_case){
            $string = mb_strtolower($string);
        }

        return strtr($string, $converter);
    }

    /**
    * Переводит строку в url вид, встречая русские буквы переводит в английские,
    * встречая диакритические символы переводит в обычные
    * 
    * @param string $str            - строка из которой будем преобразовывать 
    * @param boolean $to_lower_case - флаг перевода в нижний регистр. По умолчанию true. 
    * @param integer|boolean $max_length - false - длинна не обрезается, либо значение количества символов, до которого обрезать  
    * @return string
    */
    public static function str2url($str, $to_lower_case = true, $max_length = false)
    {

        // переводим в транслит
        // и в нижний регистр, если нужно
        $str = Transliteration::rus2translit($str,$to_lower_case);
        // заменяем диакритические символы
        $str = Transliteration::diacritic2standard($str, $to_lower_case);
        // заменям все ненужное нам на "-"

        $str = preg_replace('~[^-a-z0-9_]+~u', '-', $str);

        // удаляем начальные и конечные '-'

        $str = trim($str, "-");
        
        if ($max_length && mb_strlen($str)>$max_length){
           $str = mb_substr($str, 0, $max_length); 
        }

        return $str;
    }

    /**
     * Punto switcher одного слова
     *
     * @param string $word - слово для перетранслитерации
     * @return string
     */
    public static function puntoSwitchWord($word)
    {
        //С русского на английский
        $ru_arr = ['й' => 'q', 'ц' => 'w', 'у' => 'e', 'к' => 'r', 'е' => 't', 'н' => 'y',
            'г' => 'u', 'ш' => 'i', 'щ' => 'o', 'з' => 'p', 'х' => '[', 'ъ' => ']', 'ф' => 'a',
            'ы' => 's', 'в' => 'd', 'а' => 'f', 'п' => 'g', 'р' => 'h', 'о' => 'j', 'л' => 'k',
            'д' => 'l', 'ж' => ';', 'э' => '\'', 'я' => 'z', 'ч' => 'x', 'с' => 'c', 'м' => 'v',
            'и' => 'b', 'т' => 'n', 'ь' => 'm', 'б' => ',', 'ю' => '.','Й' => 'Q', 'Ц' => 'W',
            'У' => 'E', 'К' => 'R', 'Е' => 'T', 'Н' => 'Y', 'Г' => 'U', 'Ш' => 'I', 'Щ' => 'O',
            'З' => 'P', 'Х' => '[', 'Ъ' => ']', 'Ф' => 'A', 'Ы' => 'S', 'В' => 'D', 'А' => 'F',
            'П' => 'G', 'Р' => 'H', 'О' => 'J', 'Л' => 'K', 'Д' => 'L', 'Ж' => ';', 'Э' => '\'',
            '?' => 'Z', 'ч' => 'X', 'С' => 'C', 'М' => 'V', 'И' => 'B', 'Т' => 'N', 'Ь' => 'M',
            'Б' => ',', 'Ю' => '.'];

        //С английского на русский
        $en_arr = ['q' => 'й', 'w' => 'ц', 'e' => 'у', 'r' => 'к', 't' => 'е', 'y' => 'н',
            'u' => 'г', 'i' => 'ш', 'o' => 'щ', 'p' => 'з', '[' => 'х', ']' => 'ъ', 'a' => 'ф',
            's' => 'ы', 'd' => 'в', 'f' => 'а', 'g' => 'п', 'h' => 'р', 'j' => 'о', 'k' => 'л',
            'l' => 'д', ';' => 'ж', '\'' => 'э', 'z' => 'я', 'x' => 'ч', 'c' => 'с', 'v' => 'м',
            'b' => 'и', 'n' => 'т', 'm' => 'ь', ',' => 'б', '.' => 'ю','Q' => 'Й', 'W' => 'Ц',
            'E' => 'У', 'R' => 'К', 'T' => 'Е', 'Y' => 'Н', 'U' => 'Г', 'I' => 'Ш', 'O' => 'Щ',
            'P' => 'З', '[' => 'Х', ']' => 'Ъ', 'A' => 'Ф', 'S' => 'Ы', 'D' => 'В', 'F' => 'А',
            'G' => 'П', 'H' => 'Р', 'J' => 'О', 'K' => 'Л', 'L' => 'Д', ';' => 'Ж', '\'' => 'Э',
            'Z' => '?', 'X' => 'ч', 'C' => 'С', 'V' => 'М', 'B' => 'И', 'N' => 'Т', 'M' => 'Ь',
            ',' => 'Б', '.' => 'Ю'];

        return strtr($word, array_merge($ru_arr, $en_arr));
    }

}